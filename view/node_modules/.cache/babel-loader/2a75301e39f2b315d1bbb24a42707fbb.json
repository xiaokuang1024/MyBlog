{"ast":null,"code":"import { defineComponent, shallowRef, ref, computed, onMounted, openBlock, createBlock, Transition, unref, withCtx, createElementBlock, normalizeStyle, normalizeClass, withModifiers, renderSlot, createVNode, createCommentVNode } from 'vue';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CaretTop } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { backtopProps, backtopEmits } from './backtop.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { easeInOutCubic } from '../../../utils/animation.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst _hoisted_1 = [\"onClick\"];\nconst COMPONENT_NAME = \"ElBacktop\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: backtopProps,\n  emits: backtopEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"backtop\");\n    const el = shallowRef();\n    const container = shallowRef();\n    const visible = ref(false);\n    const backTopStyle = computed(() => ({\n      right: `${props.right}px`,\n      bottom: `${props.bottom}px`\n    }));\n    const scrollToTop = () => {\n      if (!el.value) return;\n      const beginTime = Date.now();\n      const beginValue = el.value.scrollTop;\n      const frameFunc = () => {\n        if (!el.value) return;\n        const progress = (Date.now() - beginTime) / 500;\n        if (progress < 1) {\n          el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n          requestAnimationFrame(frameFunc);\n        } else {\n          el.value.scrollTop = 0;\n        }\n      };\n      requestAnimationFrame(frameFunc);\n    };\n    const handleScroll = () => {\n      if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight;\n    };\n    const handleClick = event => {\n      scrollToTop();\n      emit(\"click\", event);\n    };\n    const handleScrollThrottled = useThrottleFn(handleScroll, 300, true);\n    useEventListener(container, \"scroll\", handleScrollThrottled);\n    onMounted(() => {\n      var _a;\n      container.value = document;\n      el.value = document.documentElement;\n      if (props.target) {\n        el.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n        if (!el.value) {\n          throwError(COMPONENT_NAME, `target is not existed: ${props.target}`);\n        }\n        container.value = el.value;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, {\n        name: `${unref(ns).namespace.value}-fade-in`\n      }, {\n        default: withCtx(() => [visible.value ? (openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          style: normalizeStyle(unref(backTopStyle)),\n          class: normalizeClass(unref(ns).b()),\n          onClick: withModifiers(handleClick, [\"stop\"])\n        }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createVNode(unref(ElIcon), {\n          class: normalizeClass(unref(ns).e(\"icon\"))\n        }, {\n          default: withCtx(() => [createVNode(unref(CaretTop))]),\n          _: 1\n        }, 8, [\"class\"])])], 14, _hoisted_1)) : createCommentVNode(\"v-if\", true)]),\n        _: 3\n      }, 8, [\"name\"]);\n    };\n  }\n});\nvar Backtop = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/backtop/src/backtop.vue\"]]);\nexport { Backtop as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;mCAyBc;EACZA,IAAM;AACR;;;;;;;;;IAKM,WAAKC,aAAa,SAAS;IACjC,MAAMC,KAAKC,UAAwB;IACnC,MAAMC,YAAYD,UAAmC;IAC/C,gBAAUE,IAAI,KAAK;IAEnB,qBAAeC,SAAS,OAAO;MACnCC,OAAO,GAAGC,KAAM;MAChBC,QAAQ,GAAGD,KAAM;IAAA,CACjB;IAEF,MAAME,cAAc,MAAM;MAGxB,IAAI,CAACR,EAAG,QAAO;MACT,kBAAYS,KAAKC,GAAI;MACrB,mBAAaV,GAAGW,KAAM;MAC5B,MAAMC,YAAY,MAAM;QACtB,IAAI,CAACZ,EAAG,QAAO;QACf,MAAMa,QAAY,SAAKH,GAAI,KAAII,SAAa;QAC5C,IAAID,WAAW,CAAG;UAChBb,GAAGW,KAAM,aAAYI,UAAc,QAAIC,eAAeH,QAAQ;UAC9DI,sBAAsBL,SAAS;QAAA,CAC1B;UACLZ,GAAGW,MAAMO,SAAY;QAAA;MACvB,CACF;MACAD,sBAAsBL,SAAS;IAAA,CACjC;IACA,MAAMO,eAAe,MAAM;MACzB,IAAInB,EAAG,QAAOoB,QAAQT,KAAQ,MAAGA,KAAM,cAAaL,KAAM;IAAA,CAC5D;IACM,oBAAee,KAAsB;MAC7Bb;MACZc,KAAK,SAASD,KAAK;IAAA,CACrB;IAEA,MAAME,qBAAwB,iBAAcJ,YAAc,OAAK,IAAI;IAElDK,4BAAW,UAAUD,qBAAqB;IAC3DE,UAAU,MAAM;MACd;MACAvB,eAAoB;MAEpBF,WAAkB0B;MAChB,SAAW;QACP1B,QAAI,GAAO;QACF;UACb2B;QACA;QACFzB;MAAA","names":["name","useNamespace","el","shallowRef","container","ref","computed","right","props","bottom","scrollToTop","Date","now","value","frameFunc","progress","beginTime","beginValue","easeInOutCubic","requestAnimationFrame","scrollTop","handleScroll","visible","event","emit","handleScrollThrottled","useEventListener","onMounted","document","throwError"],"sources":["../../../../../../packages/components/backtop/src/backtop.vue"],"sourcesContent":["<template>\n  <transition :name=\"`${ns.namespace.value}-fade-in`\">\n    <div\n      v-if=\"visible\"\n      :style=\"backTopStyle\"\n      :class=\"ns.b()\"\n      @click.stop=\"handleClick\"\n    >\n      <slot>\n        <el-icon :class=\"ns.e('icon')\"><caret-top /></el-icon>\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, shallowRef } from 'vue'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { easeInOutCubic, throwError } from '@element-plus/utils'\nimport { CaretTop } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { backtopEmits, backtopProps } from './backtop'\n\nconst COMPONENT_NAME = 'ElBacktop'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(backtopProps)\nconst emit = defineEmits(backtopEmits)\n\nconst ns = useNamespace('backtop')\nconst el = shallowRef<HTMLElement>()\nconst container = shallowRef<Document | HTMLElement>()\nconst visible = ref(false)\n\nconst backTopStyle = computed(() => ({\n  right: `${props.right}px`,\n  bottom: `${props.bottom}px`,\n}))\n\nconst scrollToTop = () => {\n  // TODO: use https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo, with behavior: 'smooth'\n\n  if (!el.value) return\n  const beginTime = Date.now()\n  const beginValue = el.value.scrollTop\n  const frameFunc = () => {\n    if (!el.value) return\n    const progress = (Date.now() - beginTime) / 500\n    if (progress < 1) {\n      el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress))\n      requestAnimationFrame(frameFunc)\n    } else {\n      el.value.scrollTop = 0\n    }\n  }\n  requestAnimationFrame(frameFunc)\n}\nconst handleScroll = () => {\n  if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight\n}\nconst handleClick = (event: MouseEvent) => {\n  scrollToTop()\n  emit('click', event)\n}\n\nconst handleScrollThrottled = useThrottleFn(handleScroll, 300, true)\n\nuseEventListener(container, 'scroll', handleScrollThrottled)\nonMounted(() => {\n  container.value = document\n  el.value = document.documentElement\n\n  if (props.target) {\n    el.value = document.querySelector<HTMLElement>(props.target) ?? undefined\n    if (!el.value) {\n      throwError(COMPONENT_NAME, `target is not existed: ${props.target}`)\n    }\n    container.value = el.value\n  }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}